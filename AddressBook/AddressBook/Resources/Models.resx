<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddContactFailed" xml:space="preserve">
    <value>Контакт не был добавлен.</value>
  </data>
  <data name="AddContactSuccess" xml:space="preserve">
    <value>Контакт был успешно добавлен!</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>Город</value>
  </data>
  <data name="CityRequired" xml:space="preserve">
    <value>Поле "Город" должно быть заполнено</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Подтверждение пароля</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Страна</value>
  </data>
  <data name="CountryRequired" xml:space="preserve">
    <value>Поле "Страна" должно быть заполнено</value>
  </data>
  <data name="DeleteContactFailed" xml:space="preserve">
    <value>Контакт не был удален.</value>
  </data>
  <data name="DeleteContactSuccess" xml:space="preserve">
    <value>Контакт был успешно удален!</value>
  </data>
  <data name="EditContactFailed" xml:space="preserve">
    <value>Контакт не был отредактирован.</value>
  </data>
  <data name="EditContactSuccess" xml:space="preserve">
    <value>Контакт был успешно отредактирован!</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Поле "Email" должно быть заполнено</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>Имя</value>
  </data>
  <data name="FirstNameRequired" xml:space="preserve">
    <value>Поле "Имя" должно быть заполнено</value>
  </data>
  <data name="House" xml:space="preserve">
    <value>Дом</value>
  </data>
  <data name="HouseRequired" xml:space="preserve">
    <value>Поле "Дом" должно быть заполнено</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Фамилия</value>
  </data>
  <data name="LastNameRequired" xml:space="preserve">
    <value>Поле "Фамилия" должно быть заполнено</value>
  </data>
  <data name="MiddleName" xml:space="preserve">
    <value>Отчество</value>
  </data>
  <data name="MinMaxLength" xml:space="preserve">
    <value>Значение \"{0}\" должно содержать не менее {2} символов.</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>Новый пароль</value>
  </data>
  <data name="NewPasswordNotMatch" xml:space="preserve">
    <value>Новый пароль и его подтверждение не совпадают.</value>
  </data>
  <data name="NewPasswordRequired" xml:space="preserve">
    <value>Поле "Новый пароль" должно быть заполнено</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Текущий пароль</value>
  </data>
  <data name="OldPasswordRequired" xml:space="preserve">
    <value>Поле "Текущий пароль" должно быть заполнено</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Пароль</value>
  </data>
  <data name="PasswordNotMatch" xml:space="preserve">
    <value>Пароль и его подтверждение не совпадают.</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Поле "Пароль" должно быть заполнено</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Телефон</value>
  </data>
  <data name="PhoneRequired" xml:space="preserve">
    <value>Поле "Телефон" должно быть заполнено</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Запомнить меня</value>
  </data>
  <data name="Room" xml:space="preserve">
    <value>Квартира</value>
  </data>
  <data name="RoomRequired" xml:space="preserve">
    <value>Поле "Квартира" должно быть заполнено</value>
  </data>
  <data name="Street" xml:space="preserve">
    <value>Улица</value>
  </data>
  <data name="StreetRequired" xml:space="preserve">
    <value>Поле "Улица" должно быть заполнено</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value />
  </data>
  <data name="TypeName" xml:space="preserve">
    <value>Тип контакта</value>
  </data>
  <data name="TypeNameRequired" xml:space="preserve">
    <value>Поле "Тип контакта" должно быть заполнено</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>Имя пользователя</value>
  </data>
  <data name="UserNameRequired" xml:space="preserve">
    <value>Поле "Имя пользователя" должно быть заполнено</value>
  </data>
</root>